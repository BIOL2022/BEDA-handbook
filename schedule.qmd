---
title: "Schedule"
toc-depth: 5
---

::: {.panel-tabset}
## Detailed outline

#### **Week 01**: 4 Aug -- 08 Aug

- L01a: Guest lecture
- L01b: The nature of data and numbers in biology experiments
- L01c: (Re-) indroduction to experimental design and analysis
- P01: Week 01 Practical

#### **Week 02**: 11 Aug -- 15 Aug

- L02a: What is a representative sample?
- L02b: Modelling fundamentals – the linear model
- L02c: (Almost) every statistical technique is a linear model
- P02: Week 02 Practical

#### **Week 03**: 18 Aug - 22 Aug	

- L03a: All models are wrong, but some more than others (testing assumptions)
- L03b: Modelling differences: the t-test

#### **Week 04**: 25 Aug - 29 Aug	

- L04a: Modelling relationships: multiple linear regression
- L04b: Modelling differences: analysis of variance (ANOCA)
- L04c: Model transformations – why, and how?

#### **Week 05**: 1 Sep - 5 Sep

- L05a: Control, fixed and random variables
- L05b: You’ve got this – Module 1 revision

#### **Week 06**: 8 Sep - 12 Sep

- L06a: general refresher
- L06b: Is aerobic enzyme activity greater in male or female birds? Dealing with class explanatory variables

#### **Week 07**: 15 Sep - 19 Sep

- L07a: Does wind reduce tree growth? Detecting differences versus describing relationships
- L07b: What are the chances of finding a bandicoot? Dealing with binary response data

#### **Week 08**: 22 Sep - 26 Sep

- L08a: Information-theoretic methods vs. null hypothesis testing
- L08b: Revision: answering your queries

#### **Mid-semester break**: 29 Sep - 3 Oct

- **Finalise Report 1 and revise the content from weeks 1 to 8**

#### **Week 09**: 6 Oct - 10 Oct

- L09a: Introduction to multivariate analysis
- L09b: Principal Component Analysis (PCA) and Factor Analysis (FA)

#### **Week 10**: 13 Oct - 17 Oct

- L10a: Clustering
- L10b: Non-metric multi-dimensional scaling (nMDS) and hypothesis testing

#### **Week 11**: 20 Oct - 24 Oct

- L11a: Multivariate analysis of variance (MANOVA)
- L11b: Multivariate Revision 1

#### **Week 12**: 27 Oct - 31 Oct

- L12a: Rarefaction and Bayesian analysis
- L12b: Multivariate Revision 2

#### **Week 13**: 3 Nov - 7 Nov

- Revision and Q&A	

## Summary
```{r}
#| include: false

library(kableExtra)
library(dplyr)
library(readr) # For read_csv
library(tidyr) # For pivot_wider and unnest
library(purrr) # For map functions if needed for dynamic groups

# Load schedule data from CSV
schedule_data_raw <- readr::read_csv("assets/schedule_data.csv", show_col_types = FALSE)

# Process the schedule data
schedule_processed <- schedule_data_raw |>
  # Create Formatted_Activity_Description from Activity_Description and Activity_Link
  mutate(
    Formatted_Activity_Description = ifelse(
      !is.na(Activity_Link) & nzchar(trimws(Activity_Link)), # Check for non-empty, non-NA link
      sprintf("[%s](%s)", Activity_Description, Activity_Link),
      Activity_Description
    )
  ) |>
  group_by(Week_Num, Dates_Str, Module_Num, Module_Title, Activity_Type) |>
  # Summarise using the new Formatted_Activity_Description
  summarise(Formatted_Activity_Description = paste(Formatted_Activity_Description, collapse = "<br>"), .groups = "drop") |>
  pivot_wider(
    names_from = Activity_Type,
    values_from = Formatted_Activity_Description, # Use the new formatted column
    values_fill = list(Formatted_Activity_Description = "") # Fill with the new formatted column
  ) |>
  rename(
    Lecture_Topics = Lecture,
    Practical_Activities = Practical
  ) |>
  mutate(
    Week = sprintf("**Week %02d**<br>%s", Week_Num, Dates_Str)
  ) |>
  arrange(Week_Num) |> # Ensure order for gt table and row grouping
  select(Week, Lecture_Topics, Practical_Activities, Module_Num, Module_Title) # Keep module info for grouping

# Create and format the table
library(gt)

```

```{r}
#| echo: false
# Create the base gt table
gt_table <- gt(schedule_processed, groupname_col = "Module_Title")

# Dynamically add row groups
# First, get the unique modules and their corresponding row numbers (based on Week_Num)
module_info <- schedule_processed |>
  distinct(Module_Num, Module_Title) |>
  arrange(Module_Num)

# The gt table is already grouped by Module_Title due to groupname_col = "Module_Title"
# We just need to ensure the order of these groups if necessary,
# and the labels are automatically taken from Module_Title.
# The `row_group_order` function will handle the display order of these groups.

gt_table |>
  tab_header(
    title = md("**Lectures & Practicals -- schedule**"),
    subtitle = md("_2025 Semester 2_")
  ) |>
  row_group_order(groups = module_info$Module_Title) |> # Use dynamic module titles for order
  cols_label(
    Week = md("**Week**"),
    Lecture_Topics = md("**Lecture Topics**"),
    Practical_Activities = md("**Practical Activities**")
  ) |>
  cols_align(align = "left", columns = Week) |> # No need for vars() here
  cols_width(
    Week ~ pct(20),
    Lecture_Topics ~ pct(50),
    Practical_Activities ~ pct(30)
  ) |>
  fmt_markdown(columns = c("Week", "Lecture_Topics", "Practical_Activities")) |>
  # Remove Module_Num and Module_Title from the final displayed table
  cols_hide(columns = c(Module_Num, Module_Title)) |>
  tab_options(
    table.background.color = "#f8fafc",
    table.border.top.color = "#005A8C",
    table.border.bottom.color = "#005A8C",
    heading.background.color = "#005A8C",
    heading.title.font.size = 24,
    heading.subtitle.font.size = 16,
    heading.title.font.weight = "bold",
    heading.subtitle.font.weight = "normal",
    row_group.background.color = "#e3eaf2",
    row_group.font.weight = "bold",
    row_group.font.size = 16,
    row_group.border.top.color = "#005A8C",
    row_group.border.bottom.color = "#005A8C",
    column_labels.background.color = "#e3eaf2",
    column_labels.font.weight = "bold",
    column_labels.font.size = 15,
    column_labels.border.top.color = "#005A8C",
    column_labels.border.bottom.color = "#005A8C",
    data_row.padding = px(8),
    table.font.size = 14
  ) |>
  tab_style(
    style = cell_text(color = "white"),
    locations = cells_title(groups = "title")
  ) |>
  tab_style(
    style = cell_text(color = "white"),
    locations = cells_title(groups = "subtitle")
  ) |>
  tab_style(
    style = cell_text(color = "#005A8C", weight = "bold"),
    locations = cells_column_labels(everything())
  ) |>
  tab_style(
    style = cell_fill(color = "#f0f4f8"),
    locations = cells_body(rows = seq(1, nrow(schedule_processed), 2))
  ) |>
  tab_style(
    style = cell_text(size = 12),
    locations = cells_body()
  )

```


:::

